
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/client.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.13.0
 * Query Engine version: 361e86d0ea4987e9f53a565309b3eed797a6bcbd
 */
Prisma.prismaVersion = {
  client: "6.13.0",
  engine: "361e86d0ea4987e9f53a565309b3eed797a6bcbd"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}




  const path = require('path')

/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.CartScalarFieldEnum = {
  id: 'id',
  storeId: 'storeId',
  customerId: 'customerId',
  orderId: 'orderId',
  totalAmount: 'totalAmount',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CartItemScalarFieldEnum = {
  id: 'id',
  cartId: 'cartId',
  productId: 'productId',
  quantity: 'quantity',
  price: 'price',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CustomerScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  phoneNumber: 'phoneNumber',
  avatar: 'avatar',
  isGuest: 'isGuest',
  customerType: 'customerType',
  storeId: 'storeId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PurchaseHistoryScalarFieldEnum = {
  id: 'id',
  orderId: 'orderId',
  totalAmount: 'totalAmount',
  date: 'date',
  customerId: 'customerId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CustomerGroupsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  storeId: 'storeId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CustomerGroupMemberScalarFieldEnum = {
  customerId: 'customerId',
  customerGroupId: 'customerGroupId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ExpenseScalarFieldEnum = {
  id: 'id',
  name: 'name',
  amount: 'amount',
  description: 'description',
  paymentMethod: 'paymentMethod',
  paymentStatus: 'paymentStatus',
  date: 'date',
  locationId: 'locationId',
  storeId: 'storeId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ExpenseCategoryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  date: 'date',
  expenseId: 'expenseId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.FeatureFlagScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  isEnabled: 'isEnabled',
  rollout: 'rollout',
  description: 'description',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BankDetailsScalarFieldEnum = {
  id: 'id',
  bankName: 'bankName',
  bankCode: 'bankCode',
  accountName: 'accountName',
  accountNumber: 'accountNumber',
  storeId: 'storeId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.WalletScalarFieldEnum = {
  id: 'id',
  balance: 'balance',
  storeId: 'storeId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.InvoiceScalarFieldEnum = {
  id: 'id',
  storeId: 'storeId',
  invoiceNumber: 'invoiceNumber',
  title: 'title',
  customerEmail: 'customerEmail',
  description: 'description',
  status: 'status',
  downloadUrl: 'downloadUrl',
  paymentLink: 'paymentLink',
  qrCode: 'qrCode',
  amount: 'amount',
  total: 'total',
  tax: 'tax',
  dueDate: 'dueDate',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.LocationScalarFieldEnum = {
  id: 'id',
  name: 'name',
  address: 'address',
  country: 'country',
  region: 'region',
  city: 'city',
  storeId: 'storeId',
  isdefaultLocation: 'isdefaultLocation',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.OrderScalarFieldEnum = {
  id: 'id',
  customerId: 'customerId',
  locationId: 'locationId',
  createdBy: 'createdBy',
  storeId: 'storeId',
  shippingMethodId: 'shippingMethodId',
  grandTotal: 'grandTotal',
  iscustomerAssigned: 'iscustomerAssigned',
  status: 'status',
  paymentStatus: 'paymentStatus',
  paymentMethod: 'paymentMethod',
  deliveryTrackingNumber: 'deliveryTrackingNumber',
  totalAmount: 'totalAmount',
  subtotalAmount: 'subtotalAmount',
  discountAmount: 'discountAmount',
  taxAmount: 'taxAmount',
  shippingFee: 'shippingFee',
  shippingZoneName: 'shippingZoneName',
  shippingAddress: 'shippingAddress',
  shippingStatus: 'shippingStatus',
  channel: 'channel',
  isposConfirmed: 'isposConfirmed',
  customerName: 'customerName',
  customerEmail: 'customerEmail',
  customerPhoneNumber: 'customerPhoneNumber',
  posConfirmedAt: 'posConfirmedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.OrderItemScalarFieldEnum = {
  id: 'id',
  quantity: 'quantity',
  price: 'price',
  orderId: 'orderId'
};

exports.Prisma.POSScalarFieldEnum = {
  id: 'id',
  staffId: 'staffId',
  orderId: 'orderId',
  customerId: 'customerId',
  terminalId: 'terminalId',
  confirmed: 'confirmed',
  confirmedAt: 'confirmedAt'
};

exports.Prisma.PointOfSaleScalarFieldEnum = {
  id: 'id',
  storeId: 'storeId',
  staffAssignedId: 'staffAssignedId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProductScalarFieldEnum = {
  id: 'id',
  name: 'name',
  shortDescription: 'shortDescription',
  description: 'description',
  sku: 'sku',
  stock: 'stock',
  price: 'price',
  shippingWeight: 'shippingWeight',
  handleTime: 'handleTime',
  freeShipping: 'freeShipping',
  packaging: 'packaging',
  discountPrice: 'discountPrice',
  unitSold: 'unitSold',
  length: 'length',
  width: 'width',
  height: 'height',
  productSize: 'productSize',
  productStatus: 'productStatus',
  imageUrl: 'imageUrl',
  storeId: 'storeId',
  locationId: 'locationId',
  purchaseOrderId: 'purchaseOrderId',
  collectionId: 'collectionId',
  hasVariation: 'hasVariation',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  warehouseId: 'warehouseId'
};

exports.Prisma.ProductCategoryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  productId: 'productId',
  storeId: 'storeId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProductCollectionScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProductVariationScalarFieldEnum = {
  id: 'id',
  productId: 'productId',
  color: 'color',
  size: 'size',
  sku: 'sku',
  price: 'price',
  stock: 'stock',
  imageUrl: 'imageUrl',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.FeaturedBrandsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  productId: 'productId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SupplierScalarFieldEnum = {
  id: 'id',
  supplierName: 'supplierName',
  email: 'email',
  phoneNumber: 'phoneNumber',
  personOfSupplier: 'personOfSupplier',
  location: 'location',
  storeId: 'storeId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PurchaseScalarFieldEnum = {
  id: 'id',
  status: 'status',
  downloadUrl: 'downloadUrl',
  toalCost: 'toalCost',
  storeSupplierId: 'storeSupplierId',
  storeId: 'storeId',
  deliveryDate: 'deliveryDate',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  firstName: 'firstName',
  middleName: 'middleName',
  lastName: 'lastName',
  email: 'email',
  phoneNumber: 'phoneNumber',
  emailVerified: 'emailVerified',
  image: 'image',
  role: 'role',
  banned: 'banned',
  banReason: 'banReason',
  banExpires: 'banExpires',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  locationId: 'locationId'
};

exports.Prisma.SessionScalarFieldEnum = {
  id: 'id',
  expiresAt: 'expiresAt',
  token: 'token',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  userId: 'userId',
  impersonatedBy: 'impersonatedBy',
  activeOrganizationId: 'activeOrganizationId'
};

exports.Prisma.AccountScalarFieldEnum = {
  id: 'id',
  accountId: 'accountId',
  providerId: 'providerId',
  userId: 'userId',
  accessToken: 'accessToken',
  refreshToken: 'refreshToken',
  idToken: 'idToken',
  accessTokenExpiresAt: 'accessTokenExpiresAt',
  refreshTokenExpiresAt: 'refreshTokenExpiresAt',
  scope: 'scope',
  password: 'password',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.VerificationScalarFieldEnum = {
  id: 'id',
  identifier: 'identifier',
  value: 'value',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.OrganizationScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  logo: 'logo',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  metadata: 'metadata',
  businessName: 'businessName',
  businessType: 'businessType',
  storeBaseCurrency: 'storeBaseCurrency',
  banner: 'banner',
  phoneNumber: 'phoneNumber',
  email: 'email',
  website: 'website',
  description: 'description',
  country: 'country',
  address: 'address',
  state: 'state',
  region: 'region',
  zipCode: 'zipCode',
  city: 'city',
  status: 'status',
  storeTag: 'storeTag',
  whitelabel: 'whitelabel',
  facebook: 'facebook',
  instagram: 'instagram',
  tiktok: 'tiktok',
  twitter: 'twitter',
  linkedin: 'linkedin',
  currency: 'currency',
  storeUrl: 'storeUrl',
  storeApproval: 'storeApproval',
  modifyProductState: 'modifyProductState'
};

exports.Prisma.MemberScalarFieldEnum = {
  id: 'id',
  organizationId: 'organizationId',
  userId: 'userId',
  role: 'role',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.InvitationScalarFieldEnum = {
  id: 'id',
  organizationId: 'organizationId',
  email: 'email',
  role: 'role',
  status: 'status',
  expiresAt: 'expiresAt',
  inviterId: 'inviterId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SettlementScalarFieldEnum = {
  id: 'id',
  amount: 'amount',
  storeId: 'storeId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ShippingScalarFieldEnum = {
  id: 'id',
  orderId: 'orderId',
  shippingMethodId: 'shippingMethodId',
  trackingNumber: 'trackingNumber',
  carrier: 'carrier',
  status: 'status',
  estimatedDelivery: 'estimatedDelivery',
  actualDelivery: 'actualDelivery',
  shippingAddress: 'shippingAddress',
  shippingZoneName: 'shippingZoneName',
  shippingFee: 'shippingFee',
  weight: 'weight',
  dimensions: 'dimensions',
  notes: 'notes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ShippingMethodScalarFieldEnum = {
  id: 'id',
  name: 'name',
  storeId: 'storeId',
  description: 'description',
  carrier: 'carrier',
  deliveryTime: 'deliveryTime',
  baseCost: 'baseCost',
  costCalculation: 'costCalculation',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ShippingZoneScalarFieldEnum = {
  id: 'id',
  name: 'name',
  storeId: 'storeId',
  countries: 'countries',
  regions: 'regions',
  postalCodes: 'postalCodes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ShippingAuditScalarFieldEnum = {
  id: 'id',
  shippingId: 'shippingId',
  action: 'action',
  details: 'details',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  userId: 'userId',
  metadata: 'metadata'
};

exports.Prisma.SubscriptionScalarFieldEnum = {
  id: 'id',
  amount: 'amount',
  channel: 'channel',
  customersId: 'customersId',
  customersCode: 'customersCode',
  storeId: 'storeId',
  authorizationCode: 'authorizationCode',
  status: 'status',
  cardType: 'cardType',
  cardBank: 'cardBank',
  cardBrand: 'cardBrand',
  countryCode: 'countryCode',
  accountName: 'accountName',
  cardBin: 'cardBin',
  cardLast4: 'cardLast4',
  expMonth: 'expMonth',
  expYear: 'expYear',
  interval: 'interval',
  emailToken: 'emailToken',
  startDate: 'startDate',
  endsAt: 'endsAt',
  cancelledAt: 'cancelledAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PlanScalarFieldEnum = {
  id: 'id',
  plansName: 'plansName',
  plansCode: 'plansCode',
  plansId: 'plansId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TransactionScalarFieldEnum = {
  id: 'id',
  storeId: 'storeId',
  amount: 'amount',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.WarehouseScalarFieldEnum = {
  id: 'id',
  name: 'name',
  isDefaultLocation: 'isDefaultLocation',
  staffId: 'staffId',
  storeId: 'storeId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.InventoryScalarFieldEnum = {
  id: 'id',
  quantity: 'quantity',
  productId: 'productId',
  warehouseId: 'warehouseId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.CustomerType = exports.$Enums.CustomerType = {
  New: 'New',
  Old: 'Old',
  Vip: 'Vip'
};

exports.OrderStatus = exports.$Enums.OrderStatus = {
  pending: 'pending',
  awaiting_review: 'awaiting_review',
  completed: 'completed',
  shipped: 'shipped',
  shipping: 'shipping',
  cancelled: 'cancelled'
};

exports.PaymentStatus = exports.$Enums.PaymentStatus = {
  PAID: 'PAID',
  PARTLY_PAID: 'PARTLY_PAID',
  UNPAID: 'UNPAID',
  REFUNDED: 'REFUNDED'
};

exports.PaymentMethod = exports.$Enums.PaymentMethod = {
  CASH: 'CASH',
  BANK_TRANSFER: 'BANK_TRANSFER',
  TERMINAL: 'TERMINAL'
};

exports.ProductStatus = exports.$Enums.ProductStatus = {
  Unpublished: 'Unpublished',
  Published: 'Published'
};

exports.ShippingStatus = exports.$Enums.ShippingStatus = {
  PENDING: 'PENDING',
  PROCESSING: 'PROCESSING',
  LABEL_CREATED: 'LABEL_CREATED',
  IN_TRANSIT: 'IN_TRANSIT',
  OUT_FOR_DELIVERY: 'OUT_FOR_DELIVERY',
  DELIVERED: 'DELIVERED',
  RETURNED: 'RETURNED',
  FAILED: 'FAILED'
};

exports.Prisma.ModelName = {
  Cart: 'Cart',
  CartItem: 'CartItem',
  Customer: 'Customer',
  PurchaseHistory: 'PurchaseHistory',
  CustomerGroups: 'CustomerGroups',
  CustomerGroupMember: 'CustomerGroupMember',
  Expense: 'Expense',
  ExpenseCategory: 'ExpenseCategory',
  FeatureFlag: 'FeatureFlag',
  BankDetails: 'BankDetails',
  Wallet: 'Wallet',
  Invoice: 'Invoice',
  Location: 'Location',
  Order: 'Order',
  OrderItem: 'OrderItem',
  POS: 'POS',
  PointOfSale: 'PointOfSale',
  Product: 'Product',
  ProductCategory: 'ProductCategory',
  ProductCollection: 'ProductCollection',
  ProductVariation: 'ProductVariation',
  FeaturedBrands: 'FeaturedBrands',
  Supplier: 'Supplier',
  Purchase: 'Purchase',
  User: 'User',
  Session: 'Session',
  Account: 'Account',
  Verification: 'Verification',
  Organization: 'Organization',
  Member: 'Member',
  Invitation: 'Invitation',
  Settlement: 'Settlement',
  Shipping: 'Shipping',
  ShippingMethod: 'ShippingMethod',
  ShippingZone: 'ShippingZone',
  ShippingAudit: 'ShippingAudit',
  Subscription: 'Subscription',
  Plan: 'Plan',
  Transaction: 'Transaction',
  Warehouse: 'Warehouse',
  Inventory: 'Inventory'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\pc\\Desktop\\Invendexx - BetterAuth\\backend\\prisma\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "client"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [
      "driverAdapters",
      "queryCompiler"
    ],
    "sourceFilePath": "C:\\Users\\pc\\Desktop\\Invendexx - BetterAuth\\backend\\prisma\\schema\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../schema",
  "clientVersion": "6.13.0",
  "engineVersion": "361e86d0ea4987e9f53a565309b3eed797a6bcbd",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "model Cart {\n  id          String     @id @default(uuid())\n  storeId     String\n  customerId  String\n  orderId     String     @unique\n  cartItems   CartItem[]\n  totalAmount Float\n  order       Order      @relation(fields: [orderId], references: [id])\n  customer    Customer   @relation(fields: [customerId], references: [id])\n  createdAt   DateTime   @default(now())\n  updatedAt   DateTime   @updatedAt\n\n  @@map(\"cart\")\n}\n\nmodel CartItem {\n  id        String   @id @default(uuid())\n  cartId    String\n  cart      Cart     @relation(fields: [cartId], references: [id])\n  productId String // assumes you have a Product model\n  quantity  Int\n  price     Float // price per unit at the time it was added to cart\n  product   Product  @relation(fields: [productId], references: [id])\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@map(\"cartitem\")\n}\n\nmodel Customer {\n  id                  String                @id @default(uuid())\n  name                String\n  email               String?               @unique\n  phoneNumber         String?\n  avatar              String?\n  isGuest             Boolean               @default(true)\n  customerType        CustomerType          @default(New)\n  storeId             String?\n  orders              Order[]\n  carts               Cart[]\n  purchaseHistory     PurchaseHistory[]\n  pos                 POS[]\n  customerGroupMember CustomerGroupMember[]\n  store               Organization?         @relation(fields: [storeId], references: [id])\n  createdAt           DateTime              @default(now())\n  updatedAt           DateTime              @updatedAt\n\n  @@map(\"customer\")\n}\n\nenum CustomerType {\n  New\n  Old\n  Vip\n}\n\nmodel PurchaseHistory {\n  id          String   @id @default(uuid())\n  orderId     String\n  totalAmount Float\n  date        DateTime\n  customerId  String\n  customer    Customer @relation(fields: [customerId], references: [id])\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  @@map(\"purchasehistory\")\n}\n\nmodel CustomerGroups {\n  id                  String                @id @default(uuid())\n  name                String\n  storeId             String\n  store               Organization          @relation(fields: [storeId], references: [id])\n  customerGroupMember CustomerGroupMember[]\n  createdAt           DateTime              @default(now())\n  updatedAt           DateTime              @updatedAt\n\n  @@map(\"customergroup\")\n}\n\nmodel CustomerGroupMember {\n  customerId      String\n  customerGroupId String\n  customer        Customer       @relation(fields: [customerId], references: [id])\n  customerGroup   CustomerGroups @relation(fields: [customerGroupId], references: [id])\n  createdAt       DateTime       @default(now())\n  updatedAt       DateTime       @updatedAt\n\n  @@id([customerId, customerGroupId])\n  @@map(\"customergroupmember\")\n}\n\nmodel Expense {\n  id              String            @id @default(uuid())\n  name            String?\n  amount          Float?\n  description     String?\n  paymentMethod   String?\n  paymentStatus   String?\n  date            DateTime?\n  locationId      String\n  expenseCategory ExpenseCategory[]\n  store           Organization      @relation(fields: [storeId], references: [id])\n  storeId         String\n  createdAt       DateTime          @default(now())\n  updatedAt       DateTime          @updatedAt\n\n  @@map(\"expense\")\n}\n\nmodel ExpenseCategory {\n  id          String   @id @default(uuid())\n  name        String\n  description String\n  date        DateTime\n  expenseId   String   @unique\n  expense     Expense  @relation(fields: [expenseId], references: [id])\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  @@map(\"expensecategory\")\n}\n\nmodel FeatureFlag {\n  id          String   @id @default(uuid())\n  name        String\n  slug        String\n  isEnabled   Boolean\n  rollout     Int\n  description String\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  @@map(\"featureflag\")\n}\n\nmodel BankDetails {\n  id            String       @id @default(uuid())\n  bankName      String\n  bankCode      String\n  accountName   String\n  accountNumber String\n  storeId       String       @unique\n  store         Organization @relation(fields: [storeId], references: [id])\n  createdAt     DateTime     @default(now())\n  updatedAt     DateTime     @updatedAt\n\n  @@map(\"bankdetails\")\n}\n\nmodel Wallet {\n  id        String       @id @default(uuid())\n  balance   Decimal\n  storeId   String       @unique\n  store     Organization @relation(fields: [storeId], references: [id])\n  createdAt DateTime     @default(now())\n  updatedAt DateTime     @updatedAt\n\n  @@map(\"wallet\")\n}\n\nmodel Invoice {\n  id            String       @id @default(uuid())\n  storeId       String\n  invoiceNumber String\n  title         String\n  customerEmail String\n  description   String?\n  status        String?\n  downloadUrl   String\n  paymentLink   String?\n  qrCode        String?\n  amount        String\n  total         Decimal      @default(0.00)\n  tax           Decimal      @default(0.00)\n  dueDate       DateTime\n  store         Organization @relation(fields: [storeId], references: [id])\n  createdAt     DateTime     @default(now())\n  updatedAt     DateTime     @updatedAt\n\n  @@map(\"invoice\")\n}\n\nmodel Location {\n  id                String       @id @default(uuid())\n  name              String\n  address           String?\n  country           String?\n  region            String?\n  city              String?\n  storeId           String\n  isdefaultLocation Boolean?\n  user              User[]\n  order             Order[]\n  product           Product[]\n  store             Organization @relation(fields: [storeId], references: [id])\n  createdAt         DateTime     @default(now())\n  updatedAt         DateTime     @updatedAt\n\n  @@map(\"location\")\n}\n\nmodel Order {\n  id                     String        @id @default(uuid())\n  customerId             String\n  locationId             String\n  createdBy              String?\n  storeId                String?\n  shippingMethodId       String?\n  grandTotal             Float\n  iscustomerAssigned     Boolean       @default(false)\n  status                 OrderStatus   @default(pending)\n  paymentStatus          PaymentStatus @default(UNPAID)\n  paymentMethod          PaymentMethod\n  deliveryTrackingNumber Int\n  totalAmount            Float\n  subtotalAmount         Float\n  discountAmount         Float?\n  taxAmount              Float\n  shippingFee            Float\n  shippingZoneName       String?\n  shippingAddress        String?\n  shippingStatus         String?\n  orderItems             OrderItem[]\n  pos                    POS?\n  cart                   Cart?\n  channel                String?\n  isposConfirmed         Boolean?      @default(false)\n  customer               Customer      @relation(fields: [customerId], references: [id])\n  location               Location?     @relation(fields: [locationId], references: [id])\n  store                  Organization? @relation(fields: [storeId], references: [id])\n  // Fixed custormer details\n  customerName           String\n  customerEmail          String\n  customerPhoneNumber    String\n  posConfirmedAt         DateTime?\n  createdAt              DateTime      @default(now())\n  updatedAt              DateTime      @updatedAt\n\n  @@map(\"order\")\n}\n\nmodel OrderItem {\n  id       String @id @default(uuid())\n  quantity Int\n  price    Float\n  orderId  String\n  order    Order  @relation(fields: [orderId], references: [id])\n\n  @@map(\"orderitem\")\n}\n\nenum OrderStatus {\n  pending\n  awaiting_review\n  completed\n  shipped\n  shipping\n  cancelled\n}\n\nenum PaymentStatus {\n  PAID\n  PARTLY_PAID\n  UNPAID\n  REFUNDED\n}\n\nenum PaymentMethod {\n  CASH\n  BANK_TRANSFER\n  TERMINAL\n}\n\nmodel POS {\n  id          String    @id @default(uuid())\n  staffId     String\n  orderId     String    @unique\n  customerId  String\n  terminalId  String\n  confirmed   Boolean   @default(false)\n  confirmedAt DateTime?\n  customer    Customer  @relation(fields: [customerId], references: [id])\n  staff       User      @relation(fields: [staffId], references: [id])\n  order       Order     @relation(fields: [orderId], references: [id])\n\n  @@map(\"pos\")\n}\n\nmodel PointOfSale {\n  id              String       @id @default(uuid())\n  storeId         String       @unique\n  staffAssignedId String       @unique\n  store           Organization @relation(fields: [storeId], references: [id])\n  staffAssigned   User         @relation(fields: [staffAssignedId], references: [id])\n  createdAt       DateTime\n  updatedAt       DateTime     @updatedAt\n\n  @@map(\"pointofsale\")\n}\n\nmodel Product {\n  id               String             @id @default(uuid())\n  name             String\n  shortDescription String?\n  description      String?\n  sku              String?            @unique\n  stock            Int?\n  price            Decimal\n  shippingWeight   String?\n  handleTime       String?\n  freeShipping     Boolean?\n  packaging        String?\n  discountPrice    String?\n  unitSold         String?\n  length           Float?\n  width            Float?\n  height           Float?\n  productSize      String?\n  productStatus    ProductStatus?     @default(Unpublished)\n  imageUrl         String[] // Prisma supports arrays in PostgreSQL and MongoDB\n  storeId          String\n  locationId       String?\n  purchaseOrderId  String?\n  collectionId     String?\n  hasVariation     Boolean?\n  featuredBrands   FeaturedBrands[]\n  cartItems        CartItem[]\n  productVariation ProductVariation[]\n  productCategory  ProductCategory[]\n  inventoryItems   Inventory[] // Link to inventory records\n  collection       ProductCollection? @relation(fields: [collectionId], references: [id])\n  purchase         Purchase?          @relation(fields: [purchaseOrderId], references: [id])\n  store            Organization       @relation(fields: [storeId], references: [id])\n  createdAt        DateTime           @default(now())\n  updatedAt        DateTime           @updatedAt\n  warehouse        Warehouse?         @relation(fields: [warehouseId], references: [id])\n  warehouseId      String?\n  location         Location?          @relation(fields: [locationId], references: [id])\n\n  @@map(\"product\")\n}\n\nmodel ProductCategory {\n  id          String       @id @default(uuid())\n  name        String?\n  description String\n  productId   Int\n  storeId     String\n  product     Product[]\n  store       Organization @relation(fields: [storeId], references: [id])\n  createdAt   DateTime\n  updatedAt   DateTime     @updatedAt\n\n  @@map(\"productcategory\")\n}\n\nmodel ProductCollection {\n  id          String    @id @default(uuid())\n  name        String\n  description String?\n  products    Product[]\n  createdAt   DateTime\n  updatedAt   DateTime  @updatedAt\n\n  @@map(\"productcollection\")\n}\n\nmodel ProductVariation {\n  id        String   @id @default(uuid())\n  productId String\n  color     String?\n  size      String?\n  sku       String?  @unique\n  price     Float?\n  stock     Int?\n  imageUrl  String?\n  product   Product  @relation(fields: [productId], references: [id])\n  createdAt DateTime\n  updatedAt DateTime @updatedAt\n\n  @@map(\"productvariation\")\n}\n\nmodel FeaturedBrands {\n  id        String   @id @default(uuid())\n  name      String\n  productId String\n  product   Product  @relation(fields: [productId], references: [id])\n  createdAt DateTime\n  updatedAt DateTime @updatedAt\n\n  @@map(\"featuredbrands\")\n}\n\nenum ProductStatus {\n  Unpublished\n  Published\n}\n\nmodel Supplier {\n  id               String       @id @default(uuid())\n  supplierName     String\n  email            String\n  phoneNumber      String\n  personOfSupplier String\n  location         String\n  purchase         Purchase[]\n  storeId          String\n  store            Organization @relation(fields: [storeId], references: [id])\n  createdAt        DateTime     @default(now())\n  updatedAt        DateTime     @updatedAt\n\n  @@map(\"supplier\")\n}\n\nmodel Purchase {\n  id              String       @id @default(uuid())\n  status          String\n  downloadUrl     String\n  toalCost        Decimal\n  storeSupplierId String\n  storeId         String\n  deliveryDate    DateTime\n  storeSupplier   Supplier     @relation(fields: [storeSupplierId], references: [id])\n  store           Organization @relation(fields: [storeId], references: [id])\n  products        Product[]\n  createdAt       DateTime     @default(now())\n  updatedAt       DateTime     @updatedAt\n\n  @@map(\"purchase\")\n}\n\n// Datasource\n\ndatasource db {\n  provider  = \"postgresql\"\n  url       = env(\"DATABASE_URL\")\n  directUrl = env(\"DIRECT_URL\")\n}\n\ngenerator client {\n  provider        = \"prisma-client-js\"\n  output          = \"../generated/prisma\"\n  previewFeatures = [\"queryCompiler\", \"driverAdapters\"]\n}\n\nmodel User {\n  id            String       @id @default(uuid())\n  name          String?\n  firstName     String\n  middleName    String?\n  lastName      String\n  email         String\n  phoneNumber   String?\n  emailVerified Boolean?\n  image         String?\n  role          String?\n  banned        Boolean?\n  banReason     String?\n  banExpires    DateTime?\n  members       Member[]\n  invitations   Invitation[]\n  createdAt     DateTime     @default(now())\n  updatedAt     DateTime     @updatedAt\n  sessions      Session[]\n  accounts      Account[]\n  // Custom section\n  location      Location?    @relation(fields: [locationId], references: [id])\n  locationId    String?\n  PointOfSale   PointOfSale?\n  warehouse     Warehouse?\n\n  POS POS[]\n\n  @@unique([email])\n  @@map(\"user\")\n}\n\nmodel Session {\n  id                   String   @id\n  expiresAt            DateTime\n  token                String\n  createdAt            DateTime @default(now())\n  updatedAt            DateTime @updatedAt\n  ipAddress            String?\n  userAgent            String?\n  userId               String\n  user                 User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n  impersonatedBy       String?\n  activeOrganizationId String?\n\n  @@unique([token])\n  @@map(\"session\")\n}\n\nmodel Account {\n  id                    String    @id\n  accountId             String\n  providerId            String\n  userId                String\n  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)\n  accessToken           String?\n  refreshToken          String?\n  idToken               String?\n  accessTokenExpiresAt  DateTime?\n  refreshTokenExpiresAt DateTime?\n  scope                 String?\n  password              String?\n  createdAt             DateTime\n  updatedAt             DateTime\n\n  @@map(\"account\")\n}\n\nmodel Verification {\n  id         String    @id\n  identifier String\n  value      String\n  expiresAt  DateTime\n  createdAt  DateTime?\n  updatedAt  DateTime?\n\n  @@map(\"verification\")\n}\n\nmodel Organization {\n  id                 String            @id\n  name               String\n  slug               String?\n  logo               String?\n  createdAt          DateTime          @default(now())\n  updatedAt          DateTime          @updatedAt\n  metadata           String?\n  members            Member[]\n  invitations        Invitation[]\n  // Custom section\n  businessName       String?\n  businessType       String?\n  storeBaseCurrency  String?           @default(\"GHS\")\n  banner             String?\n  phoneNumber        String?\n  email              String?\n  website            String?\n  description        String?\n  country            String?\n  address            String?\n  state              String?\n  region             String?\n  zipCode            String?\n  city               String?\n  status             String?\n  storeTag           String?\n  whitelabel         String?\n  facebook           String?\n  instagram          String?\n  tiktok             String?\n  twitter            String?\n  linkedin           String?\n  currency           String?           @default(\"GHS\")\n  storeUrl           String?\n  storeApproval      Boolean?\n  modifyProductState Boolean?\n  bankDetails        BankDetails?\n  wallet             Wallet?\n  location           Location[]\n  order              Order[]\n  customer           Customer[]\n  customerGroups     CustomerGroups[]\n  expense            Expense[]\n  invoice            Invoice[]\n  pointOfSale        PointOfSale?\n  product            Product[]\n  supplier           Supplier[]\n  purchase           Purchase[]\n  settlements        Settlement[]\n  subscription       Subscription?\n  transaction        Transaction[]\n  warehouse          Warehouse[]\n  ShippingMethod     ShippingMethod[]\n  ShippingZone       ShippingZone[]\n  productCategory    ProductCategory[]\n\n  @@unique([slug])\n  @@map(\"organization\")\n}\n\nmodel Member {\n  id             String       @id\n  organizationId String\n  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n  userId         String\n  user           User         @relation(fields: [userId], references: [id], onDelete: Cascade)\n  role           String\n  createdAt      DateTime     @default(now())\n  updatedAt      DateTime     @updatedAt\n\n  @@map(\"member\")\n}\n\nmodel Invitation {\n  id             String       @id\n  organizationId String\n  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)\n  email          String\n  role           String?\n  status         String\n  expiresAt      DateTime\n  inviterId      String\n  user           User         @relation(fields: [inviterId], references: [id], onDelete: Cascade)\n  createdAt      DateTime     @default(now())\n  updatedAt      DateTime     @updatedAt\n\n  @@map(\"invitation\")\n}\n\nmodel Settlement {\n  id        String       @id @default(uuid())\n  amount    Decimal\n  storeId   String\n  store     Organization @relation(fields: [storeId], references: [id])\n  createdAt DateTime     @default(now())\n  updatedAt DateTime     @updatedAt\n\n  @@map(\"settlement\")\n}\n\nmodel Shipping {\n  id                String          @id @default(uuid())\n  orderId           String // References your order system\n  shippingMethodId  String\n  shippingMethod    ShippingMethod  @relation(fields: [shippingMethodId], references: [id])\n  trackingNumber    String?\n  carrier           String? // e.g., \"FedEx\", \"UPS\"\n  status            ShippingStatus  @default(PENDING)\n  estimatedDelivery DateTime?\n  actualDelivery    DateTime?\n  shippingAddress   String\n  shippingZoneName  String?\n  shippingFee       Decimal         @default(0)\n  weight            Float?\n  dimensions        String? // \"LxWxH\" format\n  notes             String?\n  createdAt         DateTime        @default(now())\n  updatedAt         DateTime        @updatedAt\n  auditLogs         ShippingAudit[]\n\n  @@map(\"shipping\")\n}\n\nmodel ShippingMethod {\n  id              String         @id @default(uuid())\n  name            String // e.g., \"Standard\", \"Express\"\n  storeId         String\n  store           Organization   @relation(fields: [storeId], references: [id])\n  description     String?\n  carrier         String? // Specific carrier if fixed\n  deliveryTime    String // e.g., \"3-5 business days\"\n  baseCost        Float\n  costCalculation String? // JSON for complex calculations\n  isActive        Boolean        @default(true)\n  shippingZones   ShippingZone[]\n  createdAt       DateTime       @default(now())\n  updatedAt       DateTime       @updatedAt\n  Shipping        Shipping[]\n\n  @@map(\"shippingmethod\")\n}\n\nmodel ShippingZone {\n  id              String           @id @default(uuid())\n  name            String\n  storeId         String\n  store           Organization     @relation(fields: [storeId], references: [id])\n  countries       String[] // Country codes\n  regions         String[] // State/region names\n  postalCodes     String[]\n  shippingMethods ShippingMethod[]\n  createdAt       DateTime         @default(now())\n  updatedAt       DateTime         @updatedAt\n\n  @@map(\"shippingzone\")\n}\n\nmodel ShippingAudit {\n  id         String   @id @default(uuid())\n  shippingId String\n  shipping   Shipping @relation(fields: [shippingId], references: [id])\n  action     String // e.g., \"Label Created\", \"In Transit\"\n  details    String?\n  createdAt  DateTime @default(now())\n  updatedAt  DateTime @updatedAt\n  userId     String?\n  metadata   Json?\n\n  @@map(\"shippingaudit\")\n}\n\nenum ShippingStatus {\n  PENDING\n  PROCESSING\n  LABEL_CREATED\n  IN_TRANSIT\n  OUT_FOR_DELIVERY\n  DELIVERED\n  RETURNED\n  FAILED\n}\n\n// model Store {\n//     id                 Int              @id @default(autoincrement())\n//     name               String\n//     businessName       String?\n//     businessType       String?\n//     ownerId            Int?             @unique\n//     owner              User?            @relation(fields: [ownerId], references: [id])\n//     logo               String?\n// storeBaseCurrency  String           @default(\"GH\")\n// banner             String?\n// phoneNumber        String?\n// email              String?\n// website            String?\n// about              String?\n// country            String?\n// address            String?\n// state              String?\n// region             String?\n// zipCode            String?\n// city               String?\n// status             String?\n// storeTag           String?\n// whitlabel          String?\n// facebook           String?\n// instagram          String?\n// tiktok             String?\n// twitter            String?\n// linkedin           String?\n// currency           String           @default(\"GH\")\n// storeUrl           String?\n// storeApproval      Boolean?\n// modifyProductState String?\n//     wallet             Wallet?\n//     locations          Location[]\n//     product            Product[]\n//     hasAccess          Boolean?\n//     banks              BankDetails[]\n//     warehouses         Warehouse[]\n//     subscription       Subscription[]\n//     settlement         Settlement[]\n//     order              Order[]\n//     customer           Customer[]\n//     customerGroups     CustomerGroups[]\n//     expense            Expense[]\n//     supplier           Supplier[]\n//     purchase           Purchase[]\n//     transaction        Transaction[]\n//     pos                PointOfSale?\n//     createdAt          DateTime         @default(now())\n//     updatedAt          DateTime         @updatedAt\n\n// }\n// \n\nmodel Subscription {\n  id                Int           @id @default(autoincrement())\n  amount            Decimal?\n  channel           String?\n  customersId       Int?\n  customersCode     String?\n  storeId           String?       @unique\n  authorizationCode String?\n  status            String?\n  cardType          String?\n  cardBank          String?\n  cardBrand         String?\n  countryCode       String?\n  accountName       String?\n  cardBin           Int?\n  cardLast4         Int?\n  expMonth          Int?\n  expYear           Int?\n  interval          String?\n  emailToken        String?\n  store             Organization? @relation(fields: [storeId], references: [id])\n  startDate         DateTime?\n  endsAt            DateTime?\n  cancelledAt       DateTime?\n  createdAt         DateTime      @default(now())\n  updatedAt         DateTime      @updatedAt\n\n  @@map(\"subscription\")\n}\n\nmodel Plan {\n  id        Int      @id @default(autoincrement())\n  plansName String\n  plansCode String\n  plansId   Int\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@map(\"plan\")\n}\n\nmodel Transaction {\n  id        String        @id @default(uuid())\n  storeId   String?\n  amount    Decimal\n  store     Organization? @relation(fields: [storeId], references: [id])\n  createdAt DateTime      @default(now())\n  updatedAt DateTime      @updatedAt\n\n  @@map(\"transaction\")\n}\n\nmodel Warehouse {\n  id                String       @id @default(uuid())\n  name              String\n  inventory         Product[]\n  isDefaultLocation Boolean?\n  staffId           String       @unique\n  storeId           String\n  inventoryItems    Inventory[] // Link to inventory records\n  staffAssigned     User         @relation(fields: [staffId], references: [id])\n  store             Organization @relation(fields: [storeId], references: [id])\n  createdAt         DateTime     @default(now())\n  updatedAt         DateTime     @updatedAt\n\n  @@map(\"warehouse\")\n}\n\nmodel Inventory {\n  id          String    @id @default(uuid())\n  quantity    Int       @default(0)\n  productId   String\n  warehouseId String\n  product     Product   @relation(fields: [productId], references: [id])\n  warehouse   Warehouse @relation(fields: [warehouseId], references: [id])\n  createdAt   DateTime  @default(now())\n  updatedAt   DateTime  @updatedAt\n\n  @@map(\"inventory\")\n}\n",
  "inlineSchemaHash": "e9de6b9b5b30e7edc838745d435827d67e1634370ce6e70c89b41f62fc850d50",
  "copyEngine": true
}

const fs = require('fs')

config.dirname = __dirname
if (!fs.existsSync(path.join(__dirname, 'schema.prisma'))) {
  const alternativePaths = [
    "prisma/generated/prisma",
    "generated/prisma",
  ]
  
  const alternativePath = alternativePaths.find((altPath) => {
    return fs.existsSync(path.join(process.cwd(), altPath, 'schema.prisma'))
  }) ?? alternativePaths[0]

  config.dirname = path.join(process.cwd(), alternativePath)
  config.isBundled = true
}

config.runtimeDataModel = JSON.parse("{\"models\":{\"Cart\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"storeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cartItems\",\"kind\":\"object\",\"type\":\"CartItem\",\"relationName\":\"CartToCartItem\"},{\"name\":\"totalAmount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"CartToOrder\"},{\"name\":\"customer\",\"kind\":\"object\",\"type\":\"Customer\",\"relationName\":\"CartToCustomer\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"cart\"},\"CartItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cartId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cart\",\"kind\":\"object\",\"type\":\"Cart\",\"relationName\":\"CartToCartItem\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"CartItemToProduct\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"cartitem\"},\"Customer\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phoneNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"avatar\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isGuest\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"customerType\",\"kind\":\"enum\",\"type\":\"CustomerType\"},{\"name\":\"storeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orders\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"CustomerToOrder\"},{\"name\":\"carts\",\"kind\":\"object\",\"type\":\"Cart\",\"relationName\":\"CartToCustomer\"},{\"name\":\"purchaseHistory\",\"kind\":\"object\",\"type\":\"PurchaseHistory\",\"relationName\":\"CustomerToPurchaseHistory\"},{\"name\":\"pos\",\"kind\":\"object\",\"type\":\"POS\",\"relationName\":\"CustomerToPOS\"},{\"name\":\"customerGroupMember\",\"kind\":\"object\",\"type\":\"CustomerGroupMember\",\"relationName\":\"CustomerToCustomerGroupMember\"},{\"name\":\"store\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"CustomerToOrganization\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"customer\"},\"PurchaseHistory\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"totalAmount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"customerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customer\",\"kind\":\"object\",\"type\":\"Customer\",\"relationName\":\"CustomerToPurchaseHistory\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"purchasehistory\"},\"CustomerGroups\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"storeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"store\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"CustomerGroupsToOrganization\"},{\"name\":\"customerGroupMember\",\"kind\":\"object\",\"type\":\"CustomerGroupMember\",\"relationName\":\"CustomerGroupMemberToCustomerGroups\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"customergroup\"},\"CustomerGroupMember\":{\"fields\":[{\"name\":\"customerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customerGroupId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customer\",\"kind\":\"object\",\"type\":\"Customer\",\"relationName\":\"CustomerToCustomerGroupMember\"},{\"name\":\"customerGroup\",\"kind\":\"object\",\"type\":\"CustomerGroups\",\"relationName\":\"CustomerGroupMemberToCustomerGroups\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"customergroupmember\"},\"Expense\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"paymentMethod\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"paymentStatus\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"locationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expenseCategory\",\"kind\":\"object\",\"type\":\"ExpenseCategory\",\"relationName\":\"ExpenseToExpenseCategory\"},{\"name\":\"store\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"ExpenseToOrganization\"},{\"name\":\"storeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"expense\"},\"ExpenseCategory\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expenseId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expense\",\"kind\":\"object\",\"type\":\"Expense\",\"relationName\":\"ExpenseToExpenseCategory\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"expensecategory\"},\"FeatureFlag\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"rollout\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"featureflag\"},\"BankDetails\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bankName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bankCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accountName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accountNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"storeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"store\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"BankDetailsToOrganization\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"bankdetails\"},\"Wallet\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"balance\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"storeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"store\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrganizationToWallet\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"wallet\"},\"Invoice\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"storeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"invoiceNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customerEmail\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"downloadUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"paymentLink\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"qrCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"total\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"tax\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"dueDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"store\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"InvoiceToOrganization\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"invoice\"},\"Location\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"country\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"region\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"storeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isdefaultLocation\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"LocationToUser\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"LocationToOrder\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"LocationToProduct\"},{\"name\":\"store\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"LocationToOrganization\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"location\"},\"Order\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"locationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"storeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shippingMethodId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"grandTotal\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"iscustomerAssigned\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"OrderStatus\"},{\"name\":\"paymentStatus\",\"kind\":\"enum\",\"type\":\"PaymentStatus\"},{\"name\":\"paymentMethod\",\"kind\":\"enum\",\"type\":\"PaymentMethod\"},{\"name\":\"deliveryTrackingNumber\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"totalAmount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"subtotalAmount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"discountAmount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"taxAmount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"shippingFee\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"shippingZoneName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shippingAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shippingStatus\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orderItems\",\"kind\":\"object\",\"type\":\"OrderItem\",\"relationName\":\"OrderToOrderItem\"},{\"name\":\"pos\",\"kind\":\"object\",\"type\":\"POS\",\"relationName\":\"OrderToPOS\"},{\"name\":\"cart\",\"kind\":\"object\",\"type\":\"Cart\",\"relationName\":\"CartToOrder\"},{\"name\":\"channel\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isposConfirmed\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"customer\",\"kind\":\"object\",\"type\":\"Customer\",\"relationName\":\"CustomerToOrder\"},{\"name\":\"location\",\"kind\":\"object\",\"type\":\"Location\",\"relationName\":\"LocationToOrder\"},{\"name\":\"store\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrderToOrganization\"},{\"name\":\"customerName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customerEmail\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customerPhoneNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"posConfirmedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"order\"},\"OrderItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToOrderItem\"}],\"dbName\":\"orderitem\"},\"POS\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"staffId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"terminalId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"confirmed\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"confirmedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"customer\",\"kind\":\"object\",\"type\":\"Customer\",\"relationName\":\"CustomerToPOS\"},{\"name\":\"staff\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"POSToUser\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToPOS\"}],\"dbName\":\"pos\"},\"PointOfSale\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"storeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"staffAssignedId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"store\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrganizationToPointOfSale\"},{\"name\":\"staffAssigned\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PointOfSaleToUser\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"pointofsale\"},\"Product\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shortDescription\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sku\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stock\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"shippingWeight\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"handleTime\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"freeShipping\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"packaging\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"discountPrice\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"unitSold\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"length\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"width\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"height\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"productSize\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"productStatus\",\"kind\":\"enum\",\"type\":\"ProductStatus\"},{\"name\":\"imageUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"storeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"locationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"purchaseOrderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"collectionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"hasVariation\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"featuredBrands\",\"kind\":\"object\",\"type\":\"FeaturedBrands\",\"relationName\":\"FeaturedBrandsToProduct\"},{\"name\":\"cartItems\",\"kind\":\"object\",\"type\":\"CartItem\",\"relationName\":\"CartItemToProduct\"},{\"name\":\"productVariation\",\"kind\":\"object\",\"type\":\"ProductVariation\",\"relationName\":\"ProductToProductVariation\"},{\"name\":\"productCategory\",\"kind\":\"object\",\"type\":\"ProductCategory\",\"relationName\":\"ProductToProductCategory\"},{\"name\":\"inventoryItems\",\"kind\":\"object\",\"type\":\"Inventory\",\"relationName\":\"InventoryToProduct\"},{\"name\":\"collection\",\"kind\":\"object\",\"type\":\"ProductCollection\",\"relationName\":\"ProductToProductCollection\"},{\"name\":\"purchase\",\"kind\":\"object\",\"type\":\"Purchase\",\"relationName\":\"ProductToPurchase\"},{\"name\":\"store\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrganizationToProduct\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"warehouse\",\"kind\":\"object\",\"type\":\"Warehouse\",\"relationName\":\"ProductToWarehouse\"},{\"name\":\"warehouseId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"object\",\"type\":\"Location\",\"relationName\":\"LocationToProduct\"}],\"dbName\":\"product\"},\"ProductCategory\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"storeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToProductCategory\"},{\"name\":\"store\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrganizationToProductCategory\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"productcategory\"},\"ProductCollection\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"products\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToProductCollection\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"productcollection\"},\"ProductVariation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"color\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"size\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sku\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"stock\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"imageUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToProductVariation\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"productvariation\"},\"FeaturedBrands\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"FeaturedBrandsToProduct\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"featuredbrands\"},\"Supplier\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"supplierName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phoneNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"personOfSupplier\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"purchase\",\"kind\":\"object\",\"type\":\"Purchase\",\"relationName\":\"PurchaseToSupplier\"},{\"name\":\"storeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"store\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrganizationToSupplier\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"supplier\"},\"Purchase\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"downloadUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"toalCost\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"storeSupplierId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"storeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deliveryDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"storeSupplier\",\"kind\":\"object\",\"type\":\"Supplier\",\"relationName\":\"PurchaseToSupplier\"},{\"name\":\"store\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrganizationToPurchase\"},{\"name\":\"products\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToPurchase\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"purchase\"},\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"middleName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phoneNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emailVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"banned\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"banReason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"banExpires\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"members\",\"kind\":\"object\",\"type\":\"Member\",\"relationName\":\"MemberToUser\"},{\"name\":\"invitations\",\"kind\":\"object\",\"type\":\"Invitation\",\"relationName\":\"InvitationToUser\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"sessions\",\"kind\":\"object\",\"type\":\"Session\",\"relationName\":\"SessionToUser\"},{\"name\":\"accounts\",\"kind\":\"object\",\"type\":\"Account\",\"relationName\":\"AccountToUser\"},{\"name\":\"location\",\"kind\":\"object\",\"type\":\"Location\",\"relationName\":\"LocationToUser\"},{\"name\":\"locationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"PointOfSale\",\"kind\":\"object\",\"type\":\"PointOfSale\",\"relationName\":\"PointOfSaleToUser\"},{\"name\":\"warehouse\",\"kind\":\"object\",\"type\":\"Warehouse\",\"relationName\":\"UserToWarehouse\"},{\"name\":\"POS\",\"kind\":\"object\",\"type\":\"POS\",\"relationName\":\"POSToUser\"}],\"dbName\":\"user\"},\"Session\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SessionToUser\"},{\"name\":\"impersonatedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"activeOrganizationId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":\"session\"},\"Account\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AccountToUser\"},{\"name\":\"accessToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"refreshToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"idToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accessTokenExpiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"refreshTokenExpiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"scope\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"account\"},\"Verification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"identifier\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"verification\"},\"Organization\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"logo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"members\",\"kind\":\"object\",\"type\":\"Member\",\"relationName\":\"MemberToOrganization\"},{\"name\":\"invitations\",\"kind\":\"object\",\"type\":\"Invitation\",\"relationName\":\"InvitationToOrganization\"},{\"name\":\"businessName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"businessType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"storeBaseCurrency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"banner\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phoneNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"website\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"country\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"state\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"region\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"zipCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"storeTag\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"whitelabel\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"facebook\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"instagram\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tiktok\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"twitter\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"linkedin\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"storeUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"storeApproval\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"modifyProductState\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"bankDetails\",\"kind\":\"object\",\"type\":\"BankDetails\",\"relationName\":\"BankDetailsToOrganization\"},{\"name\":\"wallet\",\"kind\":\"object\",\"type\":\"Wallet\",\"relationName\":\"OrganizationToWallet\"},{\"name\":\"location\",\"kind\":\"object\",\"type\":\"Location\",\"relationName\":\"LocationToOrganization\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToOrganization\"},{\"name\":\"customer\",\"kind\":\"object\",\"type\":\"Customer\",\"relationName\":\"CustomerToOrganization\"},{\"name\":\"customerGroups\",\"kind\":\"object\",\"type\":\"CustomerGroups\",\"relationName\":\"CustomerGroupsToOrganization\"},{\"name\":\"expense\",\"kind\":\"object\",\"type\":\"Expense\",\"relationName\":\"ExpenseToOrganization\"},{\"name\":\"invoice\",\"kind\":\"object\",\"type\":\"Invoice\",\"relationName\":\"InvoiceToOrganization\"},{\"name\":\"pointOfSale\",\"kind\":\"object\",\"type\":\"PointOfSale\",\"relationName\":\"OrganizationToPointOfSale\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"OrganizationToProduct\"},{\"name\":\"supplier\",\"kind\":\"object\",\"type\":\"Supplier\",\"relationName\":\"OrganizationToSupplier\"},{\"name\":\"purchase\",\"kind\":\"object\",\"type\":\"Purchase\",\"relationName\":\"OrganizationToPurchase\"},{\"name\":\"settlements\",\"kind\":\"object\",\"type\":\"Settlement\",\"relationName\":\"OrganizationToSettlement\"},{\"name\":\"subscription\",\"kind\":\"object\",\"type\":\"Subscription\",\"relationName\":\"OrganizationToSubscription\"},{\"name\":\"transaction\",\"kind\":\"object\",\"type\":\"Transaction\",\"relationName\":\"OrganizationToTransaction\"},{\"name\":\"warehouse\",\"kind\":\"object\",\"type\":\"Warehouse\",\"relationName\":\"OrganizationToWarehouse\"},{\"name\":\"ShippingMethod\",\"kind\":\"object\",\"type\":\"ShippingMethod\",\"relationName\":\"OrganizationToShippingMethod\"},{\"name\":\"ShippingZone\",\"kind\":\"object\",\"type\":\"ShippingZone\",\"relationName\":\"OrganizationToShippingZone\"},{\"name\":\"productCategory\",\"kind\":\"object\",\"type\":\"ProductCategory\",\"relationName\":\"OrganizationToProductCategory\"}],\"dbName\":\"organization\"},\"Member\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"MemberToOrganization\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"MemberToUser\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"member\"},\"Invitation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organizationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"InvitationToOrganization\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"inviterId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"InvitationToUser\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"invitation\"},\"Settlement\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"storeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"store\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrganizationToSettlement\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"settlement\"},\"Shipping\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shippingMethodId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shippingMethod\",\"kind\":\"object\",\"type\":\"ShippingMethod\",\"relationName\":\"ShippingToShippingMethod\"},{\"name\":\"trackingNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"carrier\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ShippingStatus\"},{\"name\":\"estimatedDelivery\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"actualDelivery\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"shippingAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shippingZoneName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shippingFee\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"weight\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"dimensions\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"auditLogs\",\"kind\":\"object\",\"type\":\"ShippingAudit\",\"relationName\":\"ShippingToShippingAudit\"}],\"dbName\":\"shipping\"},\"ShippingMethod\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"storeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"store\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrganizationToShippingMethod\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"carrier\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deliveryTime\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"baseCost\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"costCalculation\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"shippingZones\",\"kind\":\"object\",\"type\":\"ShippingZone\",\"relationName\":\"ShippingMethodToShippingZone\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Shipping\",\"kind\":\"object\",\"type\":\"Shipping\",\"relationName\":\"ShippingToShippingMethod\"}],\"dbName\":\"shippingmethod\"},\"ShippingZone\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"storeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"store\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrganizationToShippingZone\"},{\"name\":\"countries\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"regions\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"postalCodes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shippingMethods\",\"kind\":\"object\",\"type\":\"ShippingMethod\",\"relationName\":\"ShippingMethodToShippingZone\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"shippingzone\"},\"ShippingAudit\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shippingId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shipping\",\"kind\":\"object\",\"type\":\"Shipping\",\"relationName\":\"ShippingToShippingAudit\"},{\"name\":\"action\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"details\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"}],\"dbName\":\"shippingaudit\"},\"Subscription\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"channel\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customersId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"customersCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"storeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"authorizationCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cardType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cardBank\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cardBrand\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"countryCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accountName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cardBin\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"cardLast4\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"expMonth\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"expYear\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"interval\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emailToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"store\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrganizationToSubscription\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endsAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"cancelledAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"subscription\"},\"Plan\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"plansName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"plansCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"plansId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"plan\"},\"Transaction\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"storeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"store\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrganizationToTransaction\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"transaction\"},\"Warehouse\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"inventory\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToWarehouse\"},{\"name\":\"isDefaultLocation\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"staffId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"storeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"inventoryItems\",\"kind\":\"object\",\"type\":\"Inventory\",\"relationName\":\"InventoryToWarehouse\"},{\"name\":\"staffAssigned\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToWarehouse\"},{\"name\":\"store\",\"kind\":\"object\",\"type\":\"Organization\",\"relationName\":\"OrganizationToWarehouse\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"warehouse\"},\"Inventory\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"warehouseId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"InventoryToProduct\"},{\"name\":\"warehouse\",\"kind\":\"object\",\"type\":\"Warehouse\",\"relationName\":\"InventoryToWarehouse\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"inventory\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = undefined
config.compilerWasm = {
      getRuntime: async () => require('./query_compiler_bg.js'),
      getQueryCompilerWasmModule: async () => {
        const queryCompilerWasmFilePath = require('path').join(config.dirname, 'query_compiler_bg.wasm')
        const queryCompilerWasmFileBytes = require('fs').readFileSync(queryCompilerWasmFilePath)

        return new WebAssembly.Module(queryCompilerWasmFileBytes)
      }
    }


const { warnEnvConflicts } = require('./runtime/client.js')

warnEnvConflicts({
    rootEnvPath: config.relativeEnvPaths.rootEnvPath && path.resolve(config.dirname, config.relativeEnvPaths.rootEnvPath),
    schemaEnvPath: config.relativeEnvPaths.schemaEnvPath && path.resolve(config.dirname, config.relativeEnvPaths.schemaEnvPath)
})

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

// file annotations for bundling tools to include these files
path.join(__dirname, "schema.prisma");
path.join(process.cwd(), "prisma/generated/prisma/schema.prisma")
